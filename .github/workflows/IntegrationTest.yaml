name: Node.js Integration Tests

on:
  pull_request:
    branches:
      - main  # This will trigger the workflow for pull requests targeting the main branch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14  # Specify the version you want to use
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.17.1'  # Specify the Node.js version you want to use

      - name: Install dependencies
        run: npm install

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U ${{ secrets.DB_USER }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Run database migrations
        run: |
          node -e "require('./config/config').sync();"
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}  # Use localhost for the PostgreSQL service

      - name: Run integration tests
        run: npm test  # Run all tests
        env:
          NODE_ENV: test  # Set the environment to 'test'
          DB_HOST: ${{ secrets.DB_HOST }}  # Use localhost for the PostgreSQL service
          DB_PORT: ${{ secrets.DB_PORT }}  # Default PostgreSQL port
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
